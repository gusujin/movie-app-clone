{"version":3,"sources":["routes/About.js","components/Movie.js","routes/Home.js","components/Navigation.js","App.js","reportWebVitals.js","index.js"],"names":["About","className","Movie","title","year","summary","poster","genres","src","alt","map","genre","index","Home","state","isLoading","movie","getMovies","a","axios","get","movies","data","setState","this","id","medium_cover_image","React","Component","Navigation","href","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0SAceA,MAXf,WACI,OACI,sBAAKC,UAAU,kBAAf,UACI,sIAGA,6D,gFCqBGC,MA1Bf,YAA0D,IAAzCC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC7C,OACE,sBAAKN,UAAU,QAAf,UACE,qBAAKO,IAAKF,EAAQG,IAAKN,EAAOA,MAAOA,IACrC,sBAAKF,UAAU,aAAf,UACE,oBAAIA,UAAU,cAAd,SAA6BE,IAC7B,oBAAIF,UAAU,aAAd,SAA4BG,IAC5B,oBAAIH,UAAU,eAAd,SACGM,EAAOG,KAAI,SAACC,EAAMC,GACjB,OAAO,oBAAgBX,UAAU,cAA1B,SAAyCU,GAAhCC,QAGpB,mBAAGX,UAAU,gBAAb,SAA8BI,WCoCvBQ,G,kNA9CXC,MAAQ,CACJC,WAAW,EACXC,MAAO,I,EAETC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IACd,yDANQ,gBAGEC,EAHF,EAERC,KACEA,KAAQD,OAKZ,EAAKE,SAAS,CAAEF,OAAQA,EAAQN,WAAW,IARjC,2C,uDAWZ,WACES,KAAKP,c,oBAEP,WAAU,IAAD,EACuBO,KAAKV,MAA3BC,EADD,EACCA,UAAWM,EADZ,EACYA,OACnB,OACE,yBAASpB,UAAU,YAAnB,SACGc,EACC,sBAAKd,UAAU,SAAf,UACE,sBAAMA,UAAU,cAAhB,0BAAkD,OAGlD,qBAAKA,UAAU,SAAf,SACEoB,EAAOX,KAAI,SAACM,GAAD,OACX,cAAC,EAAD,CAEES,GAAIT,EAAMS,GACVrB,KAAMY,EAAMZ,KACZD,MAAOa,EAAMb,MACbE,QAASW,EAAMX,QACfC,OAAQU,EAAMU,mBACdnB,OAAQS,EAAMT,QANTS,EAAMS,e,GA/BZE,IAAMC,YCMVC,MATf,WACI,OACI,gCACI,mBAAGC,KAAK,IAAR,kBACA,mBAAGA,KAAK,SAAR,uBCWGC,MAVf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWrB,IACxC,cAAC,IAAD,CAAOmB,KAAK,SAASE,UAAWlC,QCAvBmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4f7c5429.chunk.js","sourcesContent":["import React from 'react'\nimport './About.css';\n\nfunction About() {\n    return (\n        <div className=\"about_container\">\n            <span>\n                \"Freedom is the freedom to say that two plus two make four. If that is granted, all else follows.\"\n            </span>\n            <span>- George Orwell, 1984</span>\n        </div>\n    );\n}\n\nexport default About;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport './Movie.css';\n\nfunction Movie({ title, year, summary, poster, genres }) {\n  return (\n    <div className=\"movie\">\n      <img src={poster} alt={title} title={title} />\n      <div className=\"movie_data\">\n        <h3 className=\"movie_title\">{title}</h3>\n        <h5 className=\"movie_year\">{year}</h5>\n        <ul className=\"movie_genres\">\n          {genres.map((genre,index) => {\n            return <li key={index} className=\"movie_genre\">{genre}</li>\n          })}\n        </ul>\n        <p className=\"movie_summary\">{summary}</p>\n      </div>\n    </div>\n  );\n};\n\nMovie.propTypes = {\n  year: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Movie;\n","import React from 'react'\nimport axios from 'axios'\nimport Movie from '../components/Movie'\nimport './Home.css';\n\nclass Home extends React.Component{\n    state = {\n        isLoading: true,\n        movie: [],\n      };\n      getMovies = async () => {\n        const {\n          data: {\n            data: { movies },\n          },\n        } = await axios.get(\n          \"https://yts.mx/api/v2/list_movies.json?sort_by=rating\"\n        );\n        this.setState({ movies: movies, isLoading: false });\n      };\n      //async 와 await은 동시에 사용해야 한다.\n      componentDidMount() {\n        this.getMovies();\n      }\n      render() {\n        const { isLoading, movies } = this.state;\n        return (\n          <section className=\"container\">\n            {isLoading ? (\n              <div className=\"loader\">\n                <span className=\"loader_text\">'Loading...'</span>{\" \"}\n              </div>\n            ) : (\n                <div className=\"movies\">\n                { movies.map((movie) => (\n                  <Movie\n                    key={movie.id}\n                    id={movie.id}\n                    year={movie.year}\n                    title={movie.title}\n                    summary={movie.summary}\n                    poster={movie.medium_cover_image}\n                    genres={movie.genres}\n                  />\n            ))}\n            </div>\n            )}\n          </section>\n        );\n      }\n}\n\nexport default Home;","import React from 'react'\n\nfunction Navigation() {\n    return (\n        <div>\n            <a href=\"/\">Home</a>\n            <a href=\"/about\">About</a>\n        </div>\n    )\n}\n\nexport default Navigation;","import React from \"react\";\nimport \"./App.css\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport About from \"./routes/About\";\nimport Home from \"./routes/Home\";\nimport Navigation from \"./components/Navigation\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Navigation />\n      <Route path=\"/\" exact={true} component={Home} />\n      <Route path=\"/about\" component={About} />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}